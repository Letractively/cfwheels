#summary validatesUniquenessOf(property[message,when,scope])
#labels api,0.9

*Category*:

[ModelInitializationFunctions Model Initialization Functions]

*Description*:

Validates that the value of the specified property is unique in the database table. Useful for ensuring that two users can't sign up to a website with identical screen names for example. When a new record is created a check is made to make sure that no record already exists in the database with the given value for the specified property. When the record is updated the same check is made but disregarding the record itself.

*Return Type*:

Void

*History*:

-

*Parameters*:

|| *Name* || *Type* || *Required* || *Default* || *Description* ||
|| *property* || string || true || - || See documentation for `validatesExclusionOf` ||
|| *message* || string || false ||   || See documentation for `validatesExclusionOf` ||
|| *when* || string || false || onSave || See documentation for `validatesExclusionOf` ||
|| *scope* || string || false ||   || One or more properties by which to limit the scope of the uniqueness constraint ||

*Examples*:

{{{
<!--- in models/User.cfc --->
<cffunction name="init">
  <cfset validatesUniquenessOf(property="username", message="Sorry, that username is already taken.")>
</cffunction>
}}}

*Related*:

 * ObjectValidation (chapter)
 * [validatesConfirmationOf validatesConfirmationOf()] (function)
 * [validatesExclusionOf validatesExclusionOf()] (function)
 * [validatesFormatOf validatesFormatOf()] (function)
 * [validatesInclusionOf validatesInclusionOf()] (function)
 * [validatesLengthOf validatesLengthOf()] (function)
 * [validatesNumericalityOf validatesNumericalityOf()] (function)
 * [validatesPresenceOf validatesPresenceOf()] (function)