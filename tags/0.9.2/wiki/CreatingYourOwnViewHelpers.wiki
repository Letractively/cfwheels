#summary Clean up your code by moving common functionality into helper functions.
#labels chapter,0.9.1

As you probably know already Wheels gives you a lot of helper functions that you can use in your view pages. What you maybe didn't know yet is that you can also create your own view helper functions and have Wheels automatically make them available to you. To do this you store your UDFs (User Defined Functions) in...

==The `views/helpers.cfm` File==

Once a function is placed in this file it will be available for use in all your views.

Alternatively, if you only need the functions in a specific area of your application you can make them controller specific. This is done by placing a `helpers.cfm` file inside the controller's view folder. Any functions in that file will now only be included for the view pages of that specific controller.

By the way, if something rings a bell about this convention it's because it's the same way that layouts work - the global one goes in the root of `views` and the controller specific ones inside the sub folders.

Helper functions, together with the use of partials, gives you a way to keep your code nice and DRY but there are a few things to keep in mind as you work with them...

==What Not to Use Helper Functions For==

The `helpers.cfm` files are only meant to be used for views, hence the placement in the  `views` folder.

If you need to share functions across controllers those should be placed in the parent controller file, i.e. `controllers/Controller.cfc`. If you need helper type functionality within a *single* controller file you can just add it as a function in that controller and make it private so that it can't be called as an action (and as a reminder to yourself as well).

The same apply to models, use the parent file, `models/Model.cfc`, or private functions here as well.

If you need to share a function globally across your entire site then you can place it in the `events/functions.cfm` file.

==What's the Difference Between Partials and Helpers==

Both partials and helpers are there to assist you in keeping programmatic details out of your views as much as possible. Both do the job well and which one you choose is just a matter of preference. Generally speaking though it probably makes sense to use partials when you're creating a lot of HTML and helpers when you're not.