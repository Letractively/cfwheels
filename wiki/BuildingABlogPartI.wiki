#summary Setting up the web server and the database.

Welcome to the first part of a series of chapters in which I will show you how to build a simple blog application using the !ColdFusion on Wheels framework. This is meant as a crash course in Wheels more than anything else and therefore I will leave out some advanced concepts related specifically to blogs (like trackbacks, RSS feeds etc) and focus more on the general concepts in Wheels so that you learn the thinking behind it and can apply your new knowledge to any application you build using Wheels in the future. Also, while we code the blog application I will sometimes go on small detours here and there to show specific concepts and features in Wheels and sometimes I'll even add completely unnecessary things to the blog just so that I can cover the most important aspects of Wheels. Bottom line; don't expect to end up with a finished product that you can use as your own blog but do expect to learn a whole lot about Wheels.

=Download !ColdFusion on Wheels=

The very first thing you have to do is of course to download the !ColdFusion on Wheels code base. So, head on over to the !ColdFusion on Wheels [http://www.cfwheels.com/download download page] and grab the latest release (or get it from the SVN trunk if you prefer). Please note that Wheels only works on !ColdFusion 8 so if you're running an older version of !ColdFusion you need to update it to 8 (there is a free developer edition available at [http://www.adobe.com adobe]).

=Setting up the web site=

Getting an empty website running with Wheels installed is an easy process if you already know your way around IIS or Apache. Basically, all you have to do is create a new website in your web server of choice and unzip the contents of the file you just downloaded. When you've done that and access the default document of your website you should get a screen that says "Welcome to Wheels".

In case you don't know your way around a web server though, here are the instructions for setting up an empty Wheels site that can be accessed when typing `localhost` in your browser. The instructions refer to a system running Windows Server 2003 and IIS but you should be able to follow along and apply the instructions with minor modifications to your system (Wheels has been tested on Windows XP / Windows Server 2003 using IIS and on Mac OS / Linux running Apache).

 * Create a new folder under your web root (usually `C:\Inetpub\wwwroot`) named `wheelsblog`.
 * Create a new website called "Wheels Blog" with `localhost` as the host header name and `C:\Inetpub\wwwroot\wheelsblog` as the path to your home directory.

If you want to run a Wheels powered application from a sub folder in an existing website, this is entirely possible, but you'll have to live with the fact that you can never turn on URL rewriting and get those pretty URLs. Specifically it means your URLs will look like this: `http://localhost/index.cfm/blog/list/2007/08` instead of this: `http://localhost/blog/list/2007/08`.

Ok, when you're all done make sure that the website is working by typing `http://localhost` in your web browser. You should get the "Welcome to Wheels!" page.

=Turn on URL rewriting=

This step is completely optional and all the URL rewriting does is get rid of the `index.cfm` part of the URL. So, if you want the shortest and prettiest URLs possible follow the instructions below, if not, just skip this step and move on to setting up the database.

*URL rewriting in Apache*

If you have a default installation of Apache all you have to do is uncomment the rewrite rules inside `C:\Inetpub\wwwroot\wheelsblog\.htaccess` and restart Apache.

*URL rewriting in IIS*

Unfortunately there is no built-in URL rewriting mechanism in IIS so getting Wheels working with pretty URLs is a little more complicated than with Apache. Here's what you do: First, download "Ionic's ISAPI Rewrite Filter" from [http://cheeso.members.winisp.net/IIRF.aspx cheeso.members.winisp.net]. Unzip the file and put the `.dll` file in the `C:\Inetpub\wwwroot\wheelsblog` folder. To enable the rewrite filter in IIS you click on `Properties` for your website, then go to the `ISAPI Filters` tab and click the `Add...` button. Type in anything you want as the `Filter Name` and point the `Executable` to `C:\Inetpub\wwwroot\wheelsblog\IsapiRewrite4.dll`.

=Setting up the database=

This part is easy, just create a new database in SQL server or MySQL and add a new data source for it in the !ColdFusion Administrator just as you'd normally do. Give the data source the same name as the folder of your website, in our case this is "wheelsblog". This is really all you have to do before Wheels can connect to your database and start working it's magic. Of course if you wish to name your data source differently or have Wheels use the username/password in the code instead of through the !ColdFusion Administrator this is all possible via different configuration settings. You can read more about configuration [Configuration here].