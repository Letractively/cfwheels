#summary The convention for URLs in Wheels works for most situations and helps to promote an easy-to-maintain code base. With routes, you have the flexibility to break this convention when needed.
#labels chapter,0.8

==The Convention for URLs==

To write clear MVC applications with !ColdFusion on Wheels, we recommend sticking to conventions as much as possible. As you may already know, the convention for URLs is as follows:

{{{
http://www.domain.com/news/story/5
}}}

With this convention, the URL above tells Wheels to invoke the `story` action in the `News` controller. It also passes a parameter to the action called `id`, with a value of `5`.

==Creating Your Own URL Routes==

Let's say that you want a simpler URL. What if you want to have a `profile` action in a controller called `User` with this URL?

{{{
http://www.domain.com/user/johndoe
}}}

Fear not, this is possible in Wheels.

===Adding a New Route===

Routes are configured in the file at `config/routes.cfm`. This is where we'll add our new user profile route.

Routes are added to Wheels using the [addRoute addRoute()] function. Here is how we would set up our new route using `addRoute()`:

{{{
<cfset addRoute(name="userProfile", pattern="user/[username]", controller="user", action="profile")>
}}}

This call to `addRoute()`instructs Wheels to create a route named `userProfile` that passes a parameter to the `profile` action in the `User` controller called `username`. This route will be invoked by any URL that starts with a top level folder of `user`. In most cases, a pattern in a route should begin with a unique top level folder.

As you can see, any new parameters that you want to introduce to a new route should be surrounded by square brackets `[]`.