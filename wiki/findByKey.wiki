#summary findByKey(key[select,cache,reload,parameterize])
#labels api,0.9

*Category*:

[ModelClassFunctions Model Class Functions]

*Description*:

Fetches the requested record and returns it as an object. Returns `false` if no record is found.

*Return Type*:

Object

*History*:

-

*Parameters*:

|| *Name* || *Type* || *Required* || *Default* || *Description* ||
|| *key* || string or numeric || true || - || Primary key value(s) of record to fetch. Separate with comma if passing in multiple primary key values. ||
|| *select* || string || false ||   || See documentation for `findAll` ||
|| *cache* || boolean or numeric || false ||   || See documentation for `findAll` ||
|| *reload* || boolean || false || #application.settings.get.reload# || See documentation for `findAll` ||
|| *parameterize* || any || false || #application.settings.get.parameterize# || See documentation for `findAll` ||

*Examples*:

{{{
<cfset author = model("author").findByKey(99)>
}}}

{{{
<cfset author = model("author").findByKey(params.key)>
<cfif NOT IsObject(author)>
  <cfset flashInsert(message="Author #params.key# was not found")>
  <cfset redirectTo(back=true)>
</cfif>
}}}

*Related*:

 * ReadingRecords (chapter)
 * [findOne findOne()] (function)
 * [findAll findAll()] (function)