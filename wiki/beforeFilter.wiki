#labels function,controller,initialization
<h1>beforeFilter</h1>

<p><strong>Sets which functions to run before an action is executed.</strong><br />
The functions corresponding to the names you pass in will be executed before the action on the controller is executed.
You can pass in one or many method names in a list.
By default the functions will be executed before all actions in the controller but you can control this by using the <tt>only</tt> and <tt>exclude</tt> arguments.</p>

<h2>Category</h2>
<p>Controller / Initialization</p>
















<h2>Arguments</h2>
<p>Required arguments are indicated with an asterisk.</p>
<table cellspacing="0">
<tr>
	<th>Name</th>
	<th>Type</th>

	<th>Default</th>
	<th>Description</th>
</tr>

	<tr class="even">
		<td><strong>filters <span style="color:red;">*</span></strong></td>
		<td>list</td>

		<td></td>
		<td>list of action names</td>
	</tr>

	<tr class="odd">
		<td><strong>only</td>
		<td>list</td>
		<td></td>

		<td>limit the filter method to be run only before certain actions</td>
	</tr>

	<tr class="even">
		<td><strong>exclude</td>
		<td>list</td>
		<td></td>
		<td>limit the filter method to be run before all actions except some</td>

	</tr>

</table>



<h2>Example</h2>
<p>The code below specifies that the <tt>restrictAccess</tt> function will be run before all actions in the <tt>Account</tt> controller except the ones in the list. The <tt>restrictAccess</tt> function itself can be placed in the same controller file or in the parent controller (<tt>controllers/controller.cfc</tt>).</p>

<p style="margin-bottom:-3px;"><tt>controllers/account.cfc</tt></p>
<pre><code>&lt;cffunction name=&quot;init&quot;&gt;
  <strong>&lt;cfset beforeFilter(filters=&quot;restrictAccess&quot;, except=&quot;login,doLogin,loginReminder,sendLoginReminder&quot;)&gt;</strong>
&lt;/cffunction&gt;</code></pre>