#summary paginationLinks([windowSize,alwaysShowAnchors,linkToCurrentPage,prependToLink,appendToLink,classForCurrent,handle,name])
#labels api,1.0

*Category*:

[ViewHelperFunctions ViewHelper Functions]

*Description*:

Builds and returns a string containing links to pages based on a paginated query. Uses [linkTo linkTo()] internally to build the link so you need to pass in a route name, controller or action. All other [linkTo linkTo()] arguments can of course be supplied as well in which case they are passed through directly to [linkTo linkTo()]. If you have paginated more than one query in the controller you can use the `handle` argument to reference them (don't forget to pass in a handle to the [findAll findAll()] function in your controller first though).

*Return Type*:

String

*History*:

-

*Parameters*:

||   || *Type* || *Required* || *Default* || *Description* ||
|| *windowSize* || numeric || false || 2 || The number of page links to show around the current page ||
|| *alwaysShowAnchors* || boolean || false || true || Whether or not links to the first and last page should always be displayed ||
|| *linkToCurrentPage* || boolean || false || false || Whether or not the current page should be linked to ||
|| *prependToLink* || string || false ||  || String to be prepended before all links ||
|| *appendToLink* || string || false ||  || String to be appended after all links ||
|| *classForCurrent* || string || false ||  || Class name for the link to the current page ||
|| *handle* || string || false || query || The handle given to the query that the pagination links should be displayed for ||
|| *name* || string || false || page || The name of the param that holds the current page number ||

*Examples*:

{{{
<!--- controller code --->
<cfparam name="params.page" default="1">
<cfset allAuthors = model("author").findAll(page=params.page, perPage=25)>
<!--- view code --->
<ul>
  <cfoutput query="allAuthors">
    <li>#firstName# #lastName#</li>
  </cfoutput>
</ul>
<cfoutput>#paginationLinks(action="listAuthors")#</cfoutput>
}}}

{{{
<!--- view code --->
<cfoutput>#paginationLinks(action="listAuthors", windowSize=5)#</cfoutput>
}}}

{{{
<!--- controller code --->
<cfset allAuthors = model("author").findAll(handle="authQuery", page=5)>
<!--- view code --->
<ul>
  <cfoutput>#paginationLinks(action="listAuthors", handle="authQuery", prependToLink="<li>", appendToLink="</li>")#</cfoutput>
</ul>
}}}

 * [GettingPaginatedData GettingPaginatedData] (chapter)
 * [DisplayingLinksforPagination DisplayingLinksforPagination] (chapter)
 * [linkTo linkTo()] (function)
 * [findAll findAll()] (function)