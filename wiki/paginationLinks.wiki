#summary paginationLinks([classForCurrent,prependToLink,handle,linkToCurrentPage,windowSize,params,alwaysShowAnchors,name,appendToLink])
#labels api,0.8,view,helper

*Description*:

Builds and returns a string containing links to pages based on a paginated query

*Return Type*:

String

*

*History*:

-

Parameters*:

||   || *Type* || *Required* || *Default* || *Description* ||
|| *classForCurrent* || string || false ||  || Class name for the link to the current page ||
|| *prependToLink* || string || false ||  || String to be prepended before all links ||
|| *handle* || string || false || paginatedQuery || The handle given to the query that the pagination links should be displayed for ||
|| *linkToCurrentPage* || boolean || false || false || Whether or not the current page should be linked to ||
|| *windowSize* || numeric || false || 2 || The number of page links to show around the current page ||
|| *params* || string || false ||  || Any additional parameters that should be appended to the links ||
|| *alwaysShowAnchors* || boolean || false || true || Whether or not links to the first and last page should always be displayed ||
|| *name* || string || false || page || The name of the param that holds the current page number ||
|| *appendToLink* || string || false ||  || String to be appended after all links ||

*Usage*:

If you have paginated more than one query in the controller you can use the handle argument to reference them (don't forget to pass in a handle to the findAll function in your controller first though).
All other arguments are used to customize the output.

*Examples*:

{{{
Controller code...
<cfparam name="params.page" default="1">
<cfset allAuthors = model("Author").findAll(page=params.page, perPage=25)>
View code...
<ul>
  <cfoutput query="allAuthors">
    <li>#firstName# #lastName#</li>
  </cfoutput>
</ul>
<cfoutput>#paginationLinks()#</cfoutput>
}}}

{{{
View code...
<cfoutput>#paginationLinks(windowSize=5)#</cfoutput>
}}}

{{{
Controller code...
<cfset allAuthors = model("Author").findAll(handle="authQuery", page=5)>
View code...
<ul>
  <cfoutput>#paginationLinks(handle="authQuery", prependToLink="<li>", appendToLink="</li>")#</cfoutput>
</ul>
}}}
