#summary Wheels does some magic to help you link to other pages within your app. Read on to learn why you'll rarely use an `<a>` tag ever again.
#labels chapter,0.8

==Use this Function for Portability==

An `<a>` tag is easy enough, isn't it? Why would we need to use a function to do this mundane task? It turns out that there are some advantages. Here's the deal.

Wheels gives you a good amount of structure for your applications. With this, instead of thinking of URLs in the "old way," we think in terms of what route, controller, and/or action we're sending the user to next.

What's more, Wheels is smart enough to build URLs for you. And it'll do this for you based on your situation with URL rewriting. Are you using URL rewriting in your app? Great. Wheels will build your URLs accordingly. Not fortunate enough to have URL rewriting capabilities in your dev or production environments? That's fine too because Wheels will handle that automatically. Are you using Wheels in a subfolder on your site, thus eliminating your ability to use URL rewriting? Wheels handles that for you too.

If you see the pattern, this gives your application a good deal of portability. You could later enable URL rewriting or move your app to a different subfolder. As long as you're using `linkTo()` to build your links, you won't need to change anything to accommodate for this change.