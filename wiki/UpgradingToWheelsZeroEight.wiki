#summary Our listing of steps to take while upgrading your Wheels application from 0.7 to 0.8.
#labels 0.8,chapter

The easiest way to upgrade is to setup an empty website, deploy a fresh copy of Wheels 0.8, and then transfer your application code to it. When transferring, please make note of the following changes and make the appropriate changes to your code.

==File System Changes==

 * The `controller` folder has been changed to `controllers`.
 * The `model` folder has been changed to `models`.
 * The `view` folder has been changed to `views`.
 * Rename all of your CFCs in `models` and `controllers` to UpperCamelCase. So `controller.cfc` will become `Controller.cfc`, `adminUser.cfc` will become `AdminUser.cfc`, and so on.
 * All images must now be stored in the `images` folder, files in the `files` folder, JavaScript files in the `javascripts` folder, and CSS files in the `stylesheets` folder off of the root. (In 0.7, you were able to specify the paths yourself.)

==Database Structure Changes==

  * `deletedOn`, `updatedOn`, and `createdOn` are no longer available as auto-generated fields. Please change the names to `deletedAt`, `updatedAt`, and `createdAt` instead to get similar functionality, and make sure that they are of type `datetime`, `timestamp`, or equivalent.

==CFML Code Changes==

===Config Code===

 * There have been a few lines added to and removed from the files stored in the `config` folder. We recommend copying any unique settings that you have from your old copy to the new Wheels config files.

===Model Code===

  * When using a model's `findById()` and `findOne()` functions, the `found` property is no longer available. Instead, we've adopted the "Rails way" of doing this, which involves the function throwing an error of type "Wheels.RecordNotFound" if the record was not found. Use a `cftry`/`cfcatch` block to catch the error.
  * A model's `errorsOn()` function now always returns an array, even if there are no errors on the field. When there are errors for the field, the array elements will contain a `struct` with `name`, `fieldName`, and `message` elements.