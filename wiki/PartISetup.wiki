#summary Setting up Wheels, the web server and the database.

Welcome to the first part of a series of articles in which I will show how to build a simple blog using the ColdFusion on Wheels framework. This is meant as a crash course in in Wheels more than anything else and therefore I will leave out some advanced concepts related specifically to blogs (like trackbacks, RSS feeds etc) and focus more on the general concepts so that you learn the thinking behind Wheels and can apply your new knowledge to any website / application in the future. While we code the blog application I will sometimes go on small detours to show specific concepts and features in Wheels and sometimes I'll even add completely unnecessary things to the blog so that I can cover the most important things in Wheels. Bottom line, don't expect to end up with a finished product that you can use for your own blog but do expect to learn a whole lot about Wheels.

*Download ColdFusion on Wheels*
The very first thing you have to do is of course to download the ColdFusion on Wheels code. Head on over to the ColdFusion on Wheels [http://www.cfwheels.com/download download page] and grab the latest release.

*Setting up the web site*


Your download will consist of two folders. The "cfwheels" folder contains the code for the framework. Place the "cfwheels" folder anywhere on your server ("wwwroot" is a good place for it) and create a mapping called "cfwheels" for it in ColdFusion Administrator.</p> <p>The second folder, called "template", is an empty template for the application you're about to build. Copy this folder to "wwwroot" and rename it to "depot".</p> <p>Your directory structure should now look something like this:</p> <ul> <li>C:\Inetpub\wwwroot <ul> <li>C:\Inetpub\wwwroot\cfwheels</li> <li>C:\Inetpub\wwwroot\depot <ul> <li>C:\Inetpub\wwwroot\depot\app</li> <li>C:\Inetpub\wwwroot\depot\config</li> <li>C:\Inetpub\wwwroot\depot\public</li> <li>C:\Inetpub\wwwroot\depot\script</li> <li>C:\Inetpub\wwwroot\depot\readme.txt</li> </ul> </li> </ul> </li> </ul> <p>Create a new website in IIS called "depot" with the "C:\Inetpub\wwwroot\depot\public" folder as the home directory. Set the host header value to "localhost" or "depot.yourdomain.com" if you prefer to use a domain for it.</p> <p>Create a virtual directory called "app" and point it to the "C:\Inetpub\wwwroot\depot\app" folder. Follow the same procedure and create virtual directories for "config" and "script" as well.</p> <p>Go to http://localhost/script/. If you have setup everything correctly you should see the "CF Wheels Generator" page. Click on the button that says "Create Application Skeleton". When clicking that button a bunch of files and folders will be created for you and you will be taken to a page where you can create Controllers, Models and Scaffolds.</p> <p>Let's not create any of those just yet though, instead go to http://localhost/ (or the domain you specified as the host header value) to verify that the application skeleton was successfully created. You should see a screen that says: "Congratulations, you've put ColdFusion on Wheels!".</p> <h2>Add the ISAPI filter for URL rewriting</h2> <p>Download "Ionic's ISAPI Rewrite Filter" from <a href="http://cheeso.members.winisp.net/IIRF.aspx">cheeso.members.winisp.net/IIRF.aspx</a>. Unzip the file and put the .dll file in "C:\Inetpub\wwwroot\depot\public". To enable the rewrite filter in IIS you click on "Properties" for your website, then go to the "ISAPI Filters" tab and click the "Add..." button. Type in anything you want as the "Filter Name" and point the "Executable" to "C:\Inetpub\wwwroot\depot\public\IsapiRewrite4.dll".</p> <h2>Create a new database and tell Wheels how to access it</h2> <p>This part is easy, just create a new database in SQL server and a new data source for it in the ColdFusion Administrator just as you'd normally do. When that's done, open up the database.cfm file in the "config" folder and change the four values listed under "development". The type should be "sqlserver" and the other three values are your username, password and the name for the data source you just created. That's all the Wheels framework needs to know to start it's magic...</p> <h2>Next up - Scaffolding!</h2> <p>In the next part of this series we will start looking at some of that Wheels magic, first out - Scaffolding!</p> <p>Stay tuned and subscribe to <a href="http://feeds.feedburner.com/perdjurner">the RSS feed</a> for updates...</p>