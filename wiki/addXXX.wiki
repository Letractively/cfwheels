#summary addX(...)
#labels api,1.0

*Category*:

[ModelObjectFunctions Model Object Functions]

*Description*:

Dynamic shortcut method, see [update update()] for more info. Replace `X` with the name of an association you have set up either through [belongsTo belongsTo()], [hasMany hasMany()] or [hasOne hasOne()].

*Examples*:

{{{
<cfset anOwner = model("owner").findByKey(params.ownerId)>
<cfset anOwner.addCar(brand='Volvo', bought=1982)>
=
<cfset model("order").new(customerId=params.customerId, shipping=params.shipping)>
}}}

 * [Associations Associations] (chapter)
 * [UpdatingRecords UpdatingRecords](chapter)
 * [update update()] (function)











#summary newXXX(...)

*Category*:

[ModelObjectFunctions Model Object Functions]

*Description*:

Dynamic shortcut method, see [new new()] for more info. Replace `XXX` with the name of an association you have set up either through [hasOne hasOne()] or [hasMany hasMany()].

*Examples*:

{{{
<!--- a "hasOne" or "hasMany" association from "customer" to "order" is required --->
<cfset aCustomer = model("customer").findByKey(params.customerId)>

<cfset anOrder = aCustomer.newOrder(shipping=params.shipping)>
=
<cfset anOrder = model("order").new(customerId=params.customerId, shipping=params.shipping)>
}}}

 * [Associations Associations] (chapter)
 * [CreatingRecords CreatingRecords](chapter)
 * [hasOne hasOne()] (function)
 * [hasMany hasMany()] (function)
 * [new new()] (function)