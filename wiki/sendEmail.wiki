#summary sendEmail(template(s),from,to,subject[layout,detectMultipart])
#labels api,0.9.1

Category*:

[ControllerRequestFunctions Controller Request Functions]

*Description*:

Sends an email using a template and an optional layout to wrap it in.

*Return Type*:

Void

*History*:

-

*Parameters*:

|| *Name* || *Type* || *Required* || *Default* || *Description* ||
|| *template(s)* || string || true || - || The path to the email template or two paths if you want to send a multipart email (if the `detectMultipart` argument is `false` the template for the text version should be the first one in the list). ||
|| *from* || string || true || - || Email address to send from ||
|| *to* || string || true || - || Email address to send to ||
|| *subject* || string || true || - || The subject line of the email ||
|| *layout* || any || false || false || Layout to wrap body in ||
|| *detectMultipart* || boolean || false || true || When set to `true` Wheels will detect which of the templates is text and which one is html (by counting the `<` characters) ||

*Examples*:

{{{
<cfset sendEmail("myemailtemplate")>
}}}
		
{{{
<cfset member = model("member").findByKey(newMember.id)>
<cfset sendEmail(to=member.email, template="myemailtemplate", subject="Thank You for Becoming a Member", recipientName=member.name, startDate=member.startDate)>
}}}

 * SendingEmail (chapter)