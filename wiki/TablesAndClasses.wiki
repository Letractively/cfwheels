#labels model,tutorial
Wheels comes with a custom built ORM.
ORM stands for "[http://en.wikipedia.org/wiki/Object-relational_mapping object-relational mapping]" and means that tables in your relational database map to models (or "classes" if you prefer that term) in your application.
The rows in your tables map to objects (or "instances" if you prefer that term) of your models and the columns in these tables map to object attributes.

To create a model in your application that maps to a table in your database all you have to do is create a new model file in your `app/models` directory and make it extend `cfwheels.model`.

`app/models/author.cfc`
{{{
<cfcomponent extends="cfwheels.model">
</cfcomponent>
}}}

After creating this file you now have a bunch of methods available for you to use that handles reading and writing to the `authors` table.
For example you can do the following to get the author with the primary key of 1, change his first name and save the row back to the database.

{{{
<cfset auth = model("author").findByID(1)>
<cfset auth.first_name = "Joe">
<cfset auth.save()>
}}}

This code makes use of the class level method [findByID], updates the object attribute in memory and then saves it back using the object level method [save].
We'll get back to all these methods and more later of course.

By default a table name should be the plural version of the model name so if you have an `author` class the table name should be `authors`.
To change this behavior you can use the setTableName method.
This method should be placed in the pseudo-constructor area of your model file, in other words directly after the `cfcomponent` start tag and before any functions.

`app/models/author.cfc`
{{{
<cfcomponent extends="cfwheels.model">

  <cfset setTableName("auth_tbl")>

</cfcomponent>
}}}