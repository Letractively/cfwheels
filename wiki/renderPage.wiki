#summary Displays view with your specifications of controller, action, template, and layout.
#labels method,controller

=Arguments=

|| *Name* || *Required* || *Type* || *Default* || *Description* ||
|| controller || No || string || #params.controller# || Controller to run. Affects which layout may be used. ||
|| action || No || string || #params.action# || Action to run. ||
|| template || No || string || _[empty string]_ || Name of view file to use, without `.cfm` at the end. ||
|| layout || No || string || _[empty string]_ || Name of layout to use, without `_layout.cfm` at the end. ||
|| cache || No || string || _[empty string]_ || ... ||

=Overview=

Wheels's built-in `renderPage()` is always run by Wheels after your controller code executes, even if you don't explicitly call it in your code. But sometimes you may want for it to behave in a different way than its default behavior. If that's the case, then you can call it at the end of your controller code to modify which files it uses for controller, action, template, and layout. 

`renderPage()` is available at all times in your controller code.

=Examples=

All parameters are optional, so you can call them in any combination to affect which pieces of code that will run.

For example, let's say that you just want to change the layout that your view will use. To run a layout called "blog" (stored in `{webroot}/views/layouts/blog_layout.cfm`), your code would look like this:

{{{
renderPage(layout="blog")
}}}

=Related Methods=

  * [http://code.google.com/p/cfwheels/wiki/renderPartial renderPartial()]
  * [http://code.google.com/p/cfwheels/wiki/renderNothing renderNothing()]
  * [http://code.google.com/p/cfwheels/wiki/renderText renderText()]
  * [http://code.google.com/p/cfwheels/wiki/renderPageToString renderPageToString()]