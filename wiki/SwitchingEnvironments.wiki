#summary Environments that match your development stages.
#labels chapter

Each environment in Wheels matches a stage in your development cycle. By default all new applications will start in the `design` environment. The `design` environment is the most convenient one to use as you start building your application since it does not cache any data. Therefore, if you make any changes to your database for example it will immediately be picked up by Wheels. Other environment modes caches this information in order to speed up the framework as much as possible. Making changes to the database in these environment modes will cause Wheels to throw an error (although that can be avoided with a `reload` call, more on that later).

The fastest environment mode in terms of page load time is the `production` mode. This is what you should set your application to run in before you launch your website.

Besides these two environments mentioned there are three more, let's go through them all one by one so you can see the differences between them and choose the most appropriate one given your current stage of development.

=The five environment modes=

`Design`
 * Shows friendly Wheels specific errors as well as regular ColdFusion errors on screen.
 * Does not email you when an error is encountered.
 * All caches are cleared before each request (which means it never caches anything in between requests but still speeds things up slightly by caching data during the request).

`Development`
 * Handles errors the same way as the design mode.
 * Caches controller and model initialization (the `init` methods).
 * Caches the database schema.
 * Caches routes.
 * Caches image information.

`Production`
 * Caches everything that the development mode caches.
 * Activates all developer controlled caching (actions, pages, queries and partials).
 * Shows your custom error page when an error is encountered.
 * Shows your custom 404 page when a controller or action is not found.
 * Sends an email to you when an error is encountered.

`Testing`
 * Same caching settings as the production mode but with the error handling of the development mode (good for testing an application at its true speed while still getting errors reported on screen).

`Maintenance`
 * Shows your custom maintenance page unless the requesting IP address is in the exception list (set in the xxx variable in xxx or passed along in the URL as except=127.0.0.1,127.0.0.1.

This environment mode comes in handy when you want to briefly take your website offline to upload changes or modify databases on production servers).

=How to switch modes=

You change the current environment by modifying the config/environment.cfm file. After you've modified it you need to either restart the ColdFusion service or issue a `reload` request (see below for more info).

=The reload request=
Issuing a reload request is the easiest way to go from one environment to another. It's done by passing in reload as a parameter on the URL, like this: http://www.mysite.com/?reload=true. This tells Wheels to reload the entire framework (it will also run your code in the events/onapplicationstart.cfm file) and thus picking up any changes made in the config/environment.cfm file.

There's also a shortcut for lazy developers who don't want to change this file at all, to use it just issue the reload request like this instead: reload=testing. This will make Wheels skip your config/environment.cfm file and just use the URL variable instead (testing in this case).

For added protection you can set the reload_password variable in config/settings.cfm. When set a reload request will only be honored when the correct password is also supplied, like this: reload=true&password=mypass

All details about what to cache and whether or not to send errors by email can be viewed in the files...
